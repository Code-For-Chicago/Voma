{"version":3,"sources":["pages/Home.jsx","components/StyledFieldset.jsx","components/BasicInfo.jsx","components/Skills.jsx","components/CodeOfConduct.jsx","components/PrivacyPolicy.jsx","pages/Register.jsx","pages/NoOnboarding.jsx","components/App.js","lib/GlobalStyles.js","reportWebVitals.js","index.js"],"names":["StyledSection","styled","section","StyledH1","h1","StyledParagraph","p","SlackButton","button","SlackImg","img","Home","href","type","src","srcSet","alt","FieldsetStyles","fieldset","BasicInfo","firstName","lastName","pronouns","setRegisterStep","handleFormChange","filledOut","StyledFieldset","htmlFor","className","id","name","onChange","value","required","onClick","disabled","Skills","skills","toCamelCase","str","replace","word","index","toLowerCase","toUpperCase","map","skill","checked","CodeOfConduct","useState","accepted","setAccepted","Register","formData","setFormData","e","target","registerStep","NoOnboarding","to","App","rel","crossOrigin","exact","path","BaseCSSReset","css","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","GlobalStyles","document","getElementById"],"mappings":"+LAEMA,EAAgBC,IAAOC,QAAV,2IAUbC,EAAWF,IAAOG,GAAV,qEAKRC,EAAkBJ,IAAOK,EAAV,gDAIfC,EAAcN,IAAOO,OAAV,0EAMXC,EAAWR,IAAOS,IAAV,6DAKC,SAASC,IACtB,OACE,eAACX,EAAD,WACE,cAACG,EAAD,iCACA,eAACE,EAAD,0GAEM,mBAAGO,KAAK,uDAAR,mBAFN,qCAKA,cAACL,EAAD,CAAaM,KAAK,SAAS,aAAW,qBAAtC,SACE,cAACJ,EAAD,CACEK,IAAI,6DACJC,OAAO,kIACPC,IAAI,U,gCC2CCC,EAtFQhB,IAAOiB,SAAV,wxCCEL,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,UACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,iBAEMC,EAA0B,KAAdL,GAAiC,KAAbC,GAAgC,KAAbC,IAAmB,EAC5E,OACE,eAACI,EAAD,WACE,gDACA,iEACA,wBAAOC,QAAQ,YAAf,uBACa,IACX,sBAAMC,UAAU,UAAhB,wBAGA,uBACEC,GAAG,YACHhB,KAAK,OACLiB,KAAK,YACLC,SAAUP,EACVQ,MAAOZ,EACPa,UAAQ,OAGZ,wBAAON,QAAQ,WAAf,sBACY,IACV,sBAAMC,UAAU,UAAhB,wBAGA,uBACEC,GAAG,WACHhB,KAAK,OACLiB,KAAK,WACLC,SAAUP,EACVQ,MAAOX,EACPY,UAAQ,OAGZ,wBAAON,QAAQ,WAAf,qBACW,IACT,sBAAMC,UAAU,UAAhB,wBAGA,uBACEC,GAAG,WACHhB,KAAK,OACLiB,KAAK,WACLC,SAAUP,EACVQ,MAAOV,EACPW,UAAQ,OAGZ,8BACE,wBACEC,QAAST,EAAY,kBAAMF,EAAgB,IAAK,KAChDY,UAAWV,EACXZ,KAAK,SAHP,uBCvDO,SAASuB,EAAT,GAAgE,IAA9CC,EAA6C,EAA7CA,OAAQb,EAAqC,EAArCA,iBAAkBD,EAAmB,EAAnBA,gBAgBnDe,EAAc,SAACC,GAAD,OAClBA,EACGC,QAAQ,uBAAuB,SAACC,EAAMC,GAAP,OACpB,IAAVA,EAAcD,EAAKE,cAAgBF,EAAKG,iBAEzCJ,QAAQ,OAAQ,KAErB,OACE,eAACd,EAAD,WACE,4CACA,mBAAGE,UAAU,eAAb,qCACA,+IA1Bc,CAChB,iBACA,eACA,mBACA,YACA,WACA,mBACA,cACA,YACA,YACA,gBACA,qBACA,sBAmBaiB,KAAI,SAACC,GAAD,OACb,wBAAOlB,UAAU,aAAaD,QAASW,EAAYQ,GAAnD,UACE,uBACEjC,KAAK,QACLiB,KAAK,QACLD,GAAIS,EAAYQ,GAChBd,MAAOc,EACPC,QAASD,IAAUT,EACnBN,SAAUP,IAEXsB,IAT6DA,MAalE,gCACE,wBAAQZ,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAAhD,kBAGA,wBAAQqB,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAAhD,wBClDO,SAASmC,EAAT,GAA6C,IAApBzB,EAAmB,EAAnBA,gBACtC,EAAgC0B,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,eAACzB,EAAD,WACE,qDACA,mBAAGE,UAAU,eAAb,wCACA,kEACA,uBACA,uBACA,mEACA,iDACmB,IACjB,mBAAGhB,KAAK,kDAAR,iCAFF,iCAGoB,uBAHpB,8FAMA,+BACE,6FACA,sGACA,sHAGA,2GACA,4LAIA,qGACA,sLAIA,mIAIA,yPAGqD,OAErD,2IAIA,gNAIA,oHAEF,uBACA,wMAIA,uBACA,mBAAGgB,UAAU,eAAb,iCACA,wBAAOA,UAAU,aAAaD,QAAQ,MAAtC,UACE,uBAAOd,KAAK,QAAQgB,GAAG,MAAME,SAAU,kBAAMoB,GAAY,MAD3D,oDAIA,gCACE,wBAAQjB,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAAhD,kBAGA,wBAAQsB,UAAWe,EAAUhB,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAArE,wBCnEO,SAASmC,EAAT,GAA6C,IAApBzB,EAAmB,EAAnBA,gBACtC,EAAgC0B,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,eAACzB,EAAD,WACE,oDACA,mBAAGE,UAAU,eAAb,uCACA,iEACA,uBACA,uBACA,mEACA,iDACmB,IACjB,mBAAGhB,KAAK,kDAAR,iCAFF,iCAGoB,uBAHpB,8FAMA,+BACE,6FACA,sGACA,sHAGA,2GACA,4LAIA,qGACA,sLAIA,mIAIA,yPAGqD,OAErD,2IAIA,gNAIA,oHAEF,uBACA,wMAIA,uBACA,mBAAGgB,UAAU,eAAb,iCACA,wBAAOA,UAAU,aAAaD,QAAQ,MAAtC,UACE,uBAAOd,KAAK,QAAQgB,GAAG,MAAME,SAAU,kBAAMoB,GAAY,MAD3D,oDAIA,gCACE,wBAAQjB,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAAhD,kBAGA,wBAAQsB,UAAWe,EAAUhB,QAAS,kBAAMX,EAAgB,IAAIV,KAAK,SAArE,0BCjEO,SAASuC,IACtB,MAAgCH,mBAAS,CACvC7B,UAAW,GACXC,SAAU,GACVC,SAAU,GACVwB,MAAO,KAJT,mBAAOO,EAAP,KAAiBC,EAAjB,KAOM9B,EAAmB,SAAC+B,GACxBD,EAAY,2BACPD,GADM,kBAERE,EAAEC,OAAO1B,KAAOyB,EAAEC,OAAOxB,UAI9B,EAAwCiB,mBAAS,GAAjD,mBAAOQ,EAAP,KAAqBlC,EAArB,KAEA,OACE,iCACoB,IAAjBkC,GACC,cAACtC,EAAD,CACEC,UAAWiC,EAASjC,UACpBC,SAAUgC,EAAShC,SACnBC,SAAU+B,EAAS/B,SACnBC,gBAAiBA,EACjBC,iBAAkBA,IAGJ,IAAjBiC,GACC,cAACrB,EAAD,CACEC,OAAQgB,EAASP,MACjBvB,gBAAiBA,EACjBC,iBAAkBA,IAGJ,IAAjBiC,GAAsB,cAACT,EAAD,CAAezB,gBAAiBA,IACrC,IAAjBkC,GAAsB,cAAC,EAAD,CAAelC,gBAAiBA,OCvC7D,IAAMvB,EAAgBC,IAAOC,QAAV,kPAmBJ,SAASwD,IACtB,OACE,eAAC,EAAD,WACE,gEACA,6MAGE,mBAAG9C,KAAK,0CAAR,wDAIF,2DAEA,cAAC,IAAD,CAAM+C,GAAG,IAAI/B,UAAU,SAAvB,2BCFSgC,I,IAAAA,EA1Bf,WACE,OACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAMC,IAAI,aAAajD,KAAK,iCAC5B,sBAAMiD,IAAI,aAAajD,KAAK,4BAA4BkD,aAAW,IACnE,sBACElD,KAAK,2FACLiD,IAAI,kBAGR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACE,cAACrD,EAAD,MAEF,cAAC,IAAD,CAAOqD,KAAK,YAAZ,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,CAAOY,KAAK,iBAAZ,SACE,cAACN,EAAD,aCxBGO,EAAeC,YAAH,81CA2IVC,EAvCKC,YAAH,qpBACbH,GC3FWI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.36d692cb.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  width: 50%;\n  margin: 0 auto;\n  padding-top: 100px;\n\n  @media (max-width: 900px){\n    width: 80%;\n  }\n`;\n\nconst StyledH1 = styled.h1`\n  font-size: 3rem;\n  font-weight: 600;\n`;\n\nconst StyledParagraph = styled.p`\n  font-size: 1rem;\n`;\n\nconst SlackButton = styled.button`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst SlackImg = styled.img`\n  width: 100%;\n  border: none;\n`;\n\nexport default function Home() {\n  return (\n    <StyledSection>\n      <StyledH1>Sign in with Slack</StyledH1>\n      <StyledParagraph>\n        We utilize Slack throughout our onboarding process. If you haven&#39;t already, please join\n        our <a href=\"https://code-for-chicago-slack-invite.herokuapp.com/\">Slack</a> and come back\n        here to sign in.\n      </StyledParagraph>\n      <SlackButton type=\"button\" aria-label=\"Sign in with Slack\">\n        <SlackImg\n          src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n          srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n          alt=\"\"\n        />\n      </SlackButton>\n    </StyledSection>\n  );\n}\n","import styled from 'styled-components';\n\nconst FieldsetStyles = styled.fieldset`\n  width: 50vw;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 900px){\n    width: 80%;\n  }\n\n  legend {\n    padding: 3rem 0 1rem 0;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  p {\n    font-size: 1rem;\n  }\n\n  p.instructions {\n    font-size: 1.6rem;\n    font-weight: 700;\n    margin-top: 2rem;\n  }\n\n  label {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n\n  .skillLabel {\n    vertical-align: middle;\n    font-size: 1.2rem;\n    font-weight: 400;\n    &:last-of-type {\n      margin-bottom: 2rem;\n    }\n  }\n\n  input[type='text'] {\n    margin-top: 0.6rem;\n    margin-bottom: 1rem;\n    padding: 0.6rem;\n    width: 15rem;\n  }\n\n  input[type='radio'] {\n    vertical-align: middle;\n    width: 1.2rem;\n    height: 1.2rem;\n    color: gray;\n    border: 3px solid gray;\n    margin-right: 1rem;\n  }\n\n  label:last-of-type {\n    margin-bottom: 0;\n  }\n\n  nav {\n    display: flex;\n  }\n\n  button {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  button[type='submit'] {\n    margin-right: 4rem;\n    margin-left: auto;\n  }\n\n  hr {\n    height: 1px;\n    background-color: #bababa;\n    border: none;\n  }\n\n  ol {\n    list-style-position: inside;\n  }\n`;\n\nexport default FieldsetStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\n\nexport default function BasicInfo({\n  firstName,\n  lastName,\n  pronouns,\n  setRegisterStep,\n  handleFormChange,\n}) {\n  const filledOut = firstName !== '' && lastName !== '' && pronouns !== '' && true;\n  return (\n    <StyledFieldset>\n      <legend>Basic Info</legend>\n      <p>Input basic info about yourself.</p>\n      <label htmlFor=\"firstName\">\n        First Name{' '}\n        <span className=\"warning\">\n          (required)\n        </span>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"firstName\"\n          onChange={handleFormChange}\n          value={firstName}\n          required\n        />\n      </label>\n      <label htmlFor=\"lastName\">\n        Last Name{' '}\n        <span className=\"warning\">\n          (required)\n        </span>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          onChange={handleFormChange}\n          value={lastName}\n          required\n        />\n      </label>\n      <label htmlFor=\"pronouns\">\n        Pronouns{' '}\n        <span className=\"warning\">\n          (required)\n        </span>\n        <input\n          id=\"pronouns\"\n          type=\"text\"\n          name=\"pronouns\"\n          onChange={handleFormChange}\n          value={pronouns}\n          required\n        />\n      </label>\n      <nav>\n        <button\n          onClick={filledOut ? () => setRegisterStep(2) : null}\n          disabled={!filledOut}\n          type=\"button\"\n        >\n          Next\n        </button>\n      </nav>\n    </StyledFieldset>\n  );\n}\nBasicInfo.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  pronouns: PropTypes.string.isRequired,\n  setRegisterStep: PropTypes.func.isRequired,\n  handleFormChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\n\nexport default function Skills({ skills, handleFormChange, setRegisterStep }) {\n  const skillList = [\n    'Data Analytics',\n    'Data Science',\n    'Machine Learning',\n    'Front-End',\n    'Back-End',\n    'Content Strategy',\n    'UX Research',\n    'UX Design',\n    'UI Design',\n    'Visual Design',\n    'Product Management',\n    'Project Management',\n  ];\n\n  const toCamelCase = (str) =>\n    str\n      .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) =>\n        index === 0 ? word.toLowerCase() : word.toUpperCase(),\n      )\n      .replace(/\\s+/g, '');\n\n  return (\n    <StyledFieldset>\n      <legend>Skills</legend>\n      <p className=\"instructions\">Pick your primary skill</p>\n      <p>\n        Select the skill you will practice the most at Code for Chicago. You don&apos;t have to be\n        an expert in this skill.\n      </p>\n\n      {skillList.map((skill) => (\n        <label className=\"skillLabel\" htmlFor={toCamelCase(skill)} key={skill}>\n          <input\n            type=\"radio\"\n            name=\"skill\"\n            id={toCamelCase(skill)}\n            value={skill}\n            checked={skill === skills}\n            onChange={handleFormChange}\n          />\n          {skill}\n        </label>\n      ))}\n\n      <nav>\n        <button onClick={() => setRegisterStep(1)} type=\"button\">\n          Back\n        </button>\n        <button onClick={() => setRegisterStep(3)} type=\"button\">\n          Next\n        </button>\n      </nav>\n    </StyledFieldset>\n  );\n}\nSkills.propTypes = {\n  skills: PropTypes.string.isRequired,\n  setRegisterStep: PropTypes.func.isRequired,\n  handleFormChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\n\nexport default function CodeOfConduct({ setRegisterStep }) {\n  const [accepted, setAccepted] = useState(false);\n\n  return (\n    <StyledFieldset>\n      <legend>Code of Conduct</legend>\n      <p className=\"instructions\">Review our code of conduct</p>\n      <p>Please review the code of conduct</p>\n      <hr />\n      <br />\n      <p>Code for Chicago&apos;s Code of Conduct</p>\n      <p>\n        Adapted from the{' '}\n        <a href=\"https://github.com/codeforamerica/codeofconduct\">CfA Code of Conduct</a>. We are an\n        official brigade. <br />\n        The Code for Chicago community expects that Code for Chicago events, and digital forums:\n      </p>\n      <ol>\n        <li>Are a safe and respectful environment for all participants.</li>\n        <li>Are a place where people are free to fully express their identities.</li>\n        <li>\n          Presume the value of others. Everyone&apos;s ideas, skills, and contributions have value.\n        </li>\n        <li>Don’t assume everyone has the same context, and encourage questions.</li>\n        <li>\n          Find a way for people to be productive with their skills (technical and not) and energy.\n          Use language such as “yes/and”, not “no/but.”\n        </li>\n        <li>Encourage members and participants to listen as much as they speak.</li>\n        <li>\n          Strive to build tools that are open and free technology for public use. Activities that\n          aim to foster public use, not private gain, are prioritized.\n        </li>\n        <li>\n          Prioritize access for and input from those who are traditionally excluded from the civic\n          process.\n        </li>\n        <li>\n          Work to ensure that the community is well-represented in the planning, design, and\n          implementation of civic tech. This includes encouraging participation from women,\n          minorities, and traditionally marginalized groups.{' '}\n        </li>\n        <li>\n          Actively involve community groups and those with subject matter expertise in the\n          decision-making process.\n        </li>\n        <li>\n          Ensure that the relationships and conversations between community members, the local\n          government staff and community partners remain respectful, participatory, and productive.\n        </li>\n        <li>Provide an environment where people are free from discrimination or harassment.</li>\n      </ol>\n      <br />\n      <p>\n        Code for Chicago reserves the right to ask anyone in violation of these policies not to\n        participate in Code for Chicago network activities, events, and digital forums.\n      </p>\n      <hr />\n      <p className=\"instructions\">Have you read this?</p>\n      <label className=\"skillLabel\" htmlFor=\"COC\">\n        <input type=\"radio\" id=\"COC\" onChange={() => setAccepted(true)} />I understand and I accept\n        this Privacy Policy.\n      </label>\n      <nav>\n        <button onClick={() => setRegisterStep(2)} type=\"button\">\n          Back\n        </button>\n        <button disabled={!accepted} onClick={() => setRegisterStep(4)} type=\"button\">\n          Next\n        </button>\n      </nav>\n    </StyledFieldset>\n  );\n}\n\nCodeOfConduct.propTypes = {\n  setRegisterStep: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\n\nexport default function CodeOfConduct({ setRegisterStep }) {\n  const [accepted, setAccepted] = useState(false);\n\n  return (\n    <StyledFieldset>\n      <legend>Privacy Policy</legend>\n      <p className=\"instructions\">Review our Privacy Policy</p>\n      <p>Please review our Privacy Policy</p>\n      <hr />\n      <br />\n      <p>Code for Chicago&apos;s Code of Conduct</p>\n      <p>\n        Adapted from the{' '}\n        <a href=\"https://github.com/codeforamerica/codeofconduct\">CfA Code of Conduct</a>. We are an\n        official brigade. <br />\n        The Code for Chicago community expects that Code for Chicago events, and digital forums:\n      </p>\n      <ol>\n        <li>Are a safe and respectful environment for all participants.</li>\n        <li>Are a place where people are free to fully express their identities.</li>\n        <li>\n          Presume the value of others. Everyone&apos;s ideas, skills, and contributions have value.\n        </li>\n        <li>Don’t assume everyone has the same context, and encourage questions.</li>\n        <li>\n          Find a way for people to be productive with their skills (technical and not) and energy.\n          Use language such as “yes/and”, not “no/but.”\n        </li>\n        <li>Encourage members and participants to listen as much as they speak.</li>\n        <li>\n          Strive to build tools that are open and free technology for public use. Activities that\n          aim to foster public use, not private gain, are prioritized.\n        </li>\n        <li>\n          Prioritize access for and input from those who are traditionally excluded from the civic\n          process.\n        </li>\n        <li>\n          Work to ensure that the community is well-represented in the planning, design, and\n          implementation of civic tech. This includes encouraging participation from women,\n          minorities, and traditionally marginalized groups.{' '}\n        </li>\n        <li>\n          Actively involve community groups and those with subject matter expertise in the\n          decision-making process.\n        </li>\n        <li>\n          Ensure that the relationships and conversations between community members, the local\n          government staff and community partners remain respectful, participatory, and productive.\n        </li>\n        <li>Provide an environment where people are free from discrimination or harassment.</li>\n      </ol>\n      <br />\n      <p>\n        Code for Chicago reserves the right to ask anyone in violation of these policies not to\n        participate in Code for Chicago network activities, events, and digital forums.\n      </p>\n      <hr />\n      <p className=\"instructions\">Have you read this?</p>\n      <label className=\"skillLabel\" htmlFor=\"COC\">\n        <input type=\"radio\" id=\"COC\" onChange={() => setAccepted(true)} />I understand and I accept\n        this Privacy Policy.\n      </label>\n      <nav>\n        <button onClick={() => setRegisterStep(3)} type=\"button\">\n          Back\n        </button>\n        <button disabled={!accepted} onClick={() => setRegisterStep(5)} type=\"submit\">\n          Submit\n        </button>\n      </nav>\n    </StyledFieldset>\n  );\n}\n\nCodeOfConduct.propTypes = {\n  setRegisterStep: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport BasicInfo from '../components/BasicInfo';\nimport Skills from '../components/Skills';\nimport CodeOfConduct from '../components/CodeOfConduct';\nimport PrivacyPolicy from '../components/PrivacyPolicy';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    pronouns: '',\n    skill: '',\n  });\n\n  const handleFormChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const [registerStep, setRegisterStep] = useState(1);\n\n  return (\n    <form>\n      {registerStep === 1 && (\n        <BasicInfo\n          firstName={formData.firstName}\n          lastName={formData.lastName}\n          pronouns={formData.pronouns}\n          setRegisterStep={setRegisterStep}\n          handleFormChange={handleFormChange}\n        />\n      )}\n      {registerStep === 2 && (\n        <Skills\n          skills={formData.skill}\n          setRegisterStep={setRegisterStep}\n          handleFormChange={handleFormChange}\n        />\n      )}\n      {registerStep === 3 && <CodeOfConduct setRegisterStep={setRegisterStep} />}\n      {registerStep === 4 && <PrivacyPolicy setRegisterStep={setRegisterStep} />}\n    </form>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  width: 50vw;\n  margin: 0 auto;\n\n  @media (max-width: 900px){\n    width: 80%;\n  }\n\n  h1 {\n    padding: 3rem 0 1rem 0;\n    font-size: 2rem;\n    font-weight: 700;\n  }\n\n  p {\n    font-size: 1rem;\n  }\n`;\n\nexport default function NoOnboarding() {\n  return (\n    <StyledSection>\n      <h1>We appreciate your enthusiasm!</h1>\n      <p>\n        At this time new members are required to attend an Onboarding Night. If you haven&apos;t\n        attended Onboarding Night yet then register and attend one through our Meetup Page: &nbsp;\n        <a href=\"https://www.meetup.com/code-for-chicago\">\n          https://www.meetup.com/code-for-chicago\n        </a>\n      </p>\n      <p>We&apos;d love to see you then!</p>\n\n      <Link to=\"/\" className=\"button\">\n        Start Over\n      </Link>\n    </StyledSection>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport Home from '../pages/Home';\nimport Register from '../pages/Register';\nimport NoOnboarding from '../pages/NoOnboarding';\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@300;400;600;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/no-onboarding\">\n          <NoOnboarding />\n        </Route>\n      </Switch>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle, css } from 'styled-components';\n\nexport const BaseCSSReset = css`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    font-weight: normal;\n  }\n  blockquote,\n  dl,\n  dd,\n  figure,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  hr,\n  h6,\n  p,\n  input,\n  pre {\n    margin: 0;\n  }\n  ul {\n    padding-left: 0;\n    list-style: none;\n  }\n  ol,\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  sup {\n    top: 0;\n  }\n  img {\n    max-width: 100%;\n    border-style: none;\n  }\n  html {\n    font-size: 1rem;\n    line-height: 1.25;\n  }\n  body {\n    min-height: 100vh;\n    background-color: #fff;\n    color: #000;\n    font-family: 'IBM Plex Sans', sans-serif;\n  }\n  main {\n    min-height: 75vh;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.5;\n    margin-bottom: 1.6875rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    line-height: 1.25;\n    margin-bottom: 0.35em;\n  }\n  fieldset {\n    border: none;\n    padding: 0;\n  }\n  a {\n    color: blue;\n    text-decoration: underline;\n  }\n  button {\n    padding: 0;\n    border-style: none;\n    border-width: 0;\n    background-color: transparent;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  select::-ms-expand {\n    display: none;\n  }\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  ${BaseCSSReset};\n  :root {\n    --warning-color: #e20606;\n    --blue: #414CB3;\n  }\n\n  input[type=text] {\n    display: block;\n  }\n\n  button, .button {\n    color: var(--blue);\n    border: 2px solid var(--blue);\n    border-radius: 3px;\n    font-size: 1.1rem;\n    padding: 12px 14px;\n    margin: 1rem 1rem 0 0;\n    cursor: pointer;\n    &:disabled {\n      border-color: #9e9c9c;\n      color: gray;\n      cursor: not-allowed;\n    }\n  }\n\n  button[type=submit] {\n    &:enabled {\n    background-color: var(--blue);\n    color: white;\n    }\n  }\n\n  .warning {\n    color: var(--warning-color);\n    font-size: 1.25rem;\n  }\n`;\n\nexport default GlobalStyle;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport GlobalStyles from './lib/GlobalStyles';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}