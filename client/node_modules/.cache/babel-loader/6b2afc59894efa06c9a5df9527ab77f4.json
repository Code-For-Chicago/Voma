{"ast":null,"code":"var _jsxFileName = \"/Users/Will/Documents/Coding/cfc/Voma-frontend/src/components/Skills.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Skills({\n  skills,\n  handleFormChange,\n  setRegisterStep\n}) {\n  const skillList = ['Data Analytics', 'Data Science', 'Machine Learning', 'Front-End', 'Back-End', 'Content Strategy', 'UX Research', 'UX Design', 'UI Design', 'Visual Design', 'Product Management', 'Project Management'];\n\n  const toCamelCase = str => str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => index === 0 ? word.toLowerCase() : word.toUpperCase()).replace(/\\s+/g, '');\n\n  return /*#__PURE__*/_jsxDEV(StyledFieldset, {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Pick your primary skill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select the skill you will practice the most at Code for Chicago. You don't have to be an expert in this skill.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), skillList.map(skill => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"skillLabel\",\n      htmlFor: toCamelCase(skill),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"skill\",\n        id: toCamelCase(skill),\n        value: skill,\n        checked: skill === skills,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), skill]\n    }, skill, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRegisterStep(1),\n        type: \"button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRegisterStep(3),\n        type: \"button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Skills;\nSkills.propTypes = {\n  skills: PropTypes.string.isRequired,\n  setRegisterStep: PropTypes.func.isRequired,\n  handleFormChange: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/Will/Documents/Coding/cfc/Voma-frontend/src/components/Skills.jsx"],"names":["React","PropTypes","StyledFieldset","Skills","skills","handleFormChange","setRegisterStep","skillList","toCamelCase","str","replace","word","index","toLowerCase","toUpperCase","map","skill","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,gBAAV;AAA4BC,EAAAA;AAA5B,CAAhB,EAA+D;AAC5E,QAAMC,SAAS,GAAG,CAChB,gBADgB,EAEhB,cAFgB,EAGhB,kBAHgB,EAIhB,WAJgB,EAKhB,UALgB,EAMhB,kBANgB,EAOhB,aAPgB,EAQhB,WARgB,EAShB,WATgB,EAUhB,eAVgB,EAWhB,oBAXgB,EAYhB,oBAZgB,CAAlB;;AAeA,QAAMC,WAAW,GAAIC,GAAD,IAClBA,GAAG,CACAC,OADH,CACW,qBADX,EACkC,CAACC,IAAD,EAAOC,KAAP,KAC9BA,KAAK,KAAK,CAAV,GAAcD,IAAI,CAACE,WAAL,EAAd,GAAmCF,IAAI,CAACG,WAAL,EAFvC,EAIGJ,OAJH,CAIW,MAJX,EAImB,EAJnB,CADF;;AAOA,sBACE,QAAC,cAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAQGH,SAAS,CAACQ,GAAV,CAAeC,KAAD,iBACb;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,EAAER,WAAW,CAACQ,KAAD,CAAlD;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAER,WAAW,CAACQ,KAAD,CAHjB;AAIE,QAAA,KAAK,EAAEA,KAJT;AAKE,QAAA,OAAO,EAAEA,KAAK,KAAKZ,MALrB;AAME,QAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,EASGW,KATH;AAAA,OAAgEA,KAAhE;AAAA;AAAA;AAAA;AAAA,YADD,CARH,eAsBE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMV,eAAe,CAAC,CAAD,CAAtC;AAA2C,QAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMA,eAAe,CAAC,CAAD,CAAtC;AAA2C,QAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;KAxDuBH,M;AAyDxBA,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,MAAM,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UADR;AAEjBb,EAAAA,eAAe,EAAEL,SAAS,CAACmB,IAAV,CAAeD,UAFf;AAGjBd,EAAAA,gBAAgB,EAAEJ,SAAS,CAACmB,IAAV,CAAeD;AAHhB,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFieldset from './StyledFieldset';\n\nexport default function Skills({ skills, handleFormChange, setRegisterStep }) {\n  const skillList = [\n    'Data Analytics',\n    'Data Science',\n    'Machine Learning',\n    'Front-End',\n    'Back-End',\n    'Content Strategy',\n    'UX Research',\n    'UX Design',\n    'UI Design',\n    'Visual Design',\n    'Product Management',\n    'Project Management',\n  ];\n\n  const toCamelCase = (str) =>\n    str\n      .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) =>\n        index === 0 ? word.toLowerCase() : word.toUpperCase(),\n      )\n      .replace(/\\s+/g, '');\n\n  return (\n    <StyledFieldset>\n      <legend>Skills</legend>\n      <p className=\"instructions\">Pick your primary skill</p>\n      <p>\n        Select the skill you will practice the most at Code for Chicago. You don&apos;t have to be\n        an expert in this skill.\n      </p>\n\n      {skillList.map((skill) => (\n        <label className=\"skillLabel\" htmlFor={toCamelCase(skill)} key={skill}>\n          <input\n            type=\"radio\"\n            name=\"skill\"\n            id={toCamelCase(skill)}\n            value={skill}\n            checked={skill === skills}\n            onChange={handleFormChange}\n          />\n          {skill}\n        </label>\n      ))}\n\n      <nav>\n        <button onClick={() => setRegisterStep(1)} type=\"button\">\n          Back\n        </button>\n        <button onClick={() => setRegisterStep(3)} type=\"button\">\n          Next\n        </button>\n      </nav>\n    </StyledFieldset>\n  );\n}\nSkills.propTypes = {\n  skills: PropTypes.string.isRequired,\n  setRegisterStep: PropTypes.func.isRequired,\n  handleFormChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}